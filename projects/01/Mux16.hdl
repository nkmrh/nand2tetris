// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux16.hdl

/**
 * 16-bit multiplexor: 
 * for i = 0..15 out[i] = a[i] if sel == 0 
 *                        b[i] if sel == 1
 */

CHIP Mux16 {
    IN a[16], b[16], sel;
    OUT out[16];

    PARTS:
    Not(in=sel, out=ns);

    Not(in=a[0], out=na-0);
    Not(in=b[0], out=nb-0);
    And(a=na-0, b=b[0], out=a1-0);
    And(a=a1-0, b=sel, out=o1-0);
    And(a=a[0], b=nb-0, out=a2-0);
    And(a=a2-0, b=ns, out=o2-0);
    And(a=a[0], b=b[0], out=a3-0);
    And(a=a3-0, b=ns, out=o3-0);
    And(a=a[0], b=b[0], out=a4-0);
    And(a=a4-0, b=sel, out=o4-0);
    Or(a=o1-0, b=o2-0, out=or1-0);
    Or(a=or1-0, b=o3-0, out=or2-0);
    Or(a=or2-0, b=o4-0, out=out[0]);

    Not(in=a[1], out=na-1);
    Not(in=b[1], out=nb-1);
    And(a=na-1, b=b[1], out=a1-1);
    And(a=a1-1, b=sel, out=o1-1);
    And(a=a[1], b=nb-1, out=a2-1);
    And(a=a2-1, b=ns, out=o2-1);
    And(a=a[1], b=b[1], out=a3-1);
    And(a=a3-1, b=ns, out=o3-1);
    And(a=a[1], b=b[1], out=a4-1);
    And(a=a4-1, b=sel, out=o4-1);
    Or(a=o1-1, b=o2-1, out=or1-1);
    Or(a=or1-1, b=o3-1, out=or2-1);
    Or(a=or2-1, b=o4-1, out=out[1]);

    Not(in=a[2], out=na-2);
    Not(in=b[2], out=nb-2);
    And(a=na-2, b=b[2], out=a1-2);
    And(a=a1-2, b=sel, out=o1-2);
    And(a=a[2], b=nb-2, out=a2-2);
    And(a=a2-2, b=ns, out=o2-2);
    And(a=a[2], b=b[2], out=a3-2);
    And(a=a3-2, b=ns, out=o3-2);
    And(a=a[2], b=b[2], out=a4-2);
    And(a=a4-2, b=sel, out=o4-2);
    Or(a=o1-2, b=o2-2, out=or1-2);
    Or(a=or1-2, b=o3-2, out=or2-2);
    Or(a=or2-2, b=o4-2, out=out[2]);

    Not(in=a[3], out=na-3);
    Not(in=b[3], out=nb-3);
    And(a=na-3, b=b[3], out=a1-3);
    And(a=a1-3, b=sel, out=o1-3);
    And(a=a[3], b=nb-3, out=a2-3);
    And(a=a2-3, b=ns, out=o2-3);
    And(a=a[3], b=b[3], out=a3-3);
    And(a=a3-3, b=ns, out=o3-3);
    And(a=a[3], b=b[3], out=a4-3);
    And(a=a4-3, b=sel, out=o4-3);
    Or(a=o1-3, b=o2-3, out=or1-3);
    Or(a=or1-3, b=o3-3, out=or2-3);
    Or(a=or2-3, b=o4-3, out=out[3]);

    Not(in=a[4], out=na-4);
    Not(in=b[4], out=nb-4);
    And(a=na-4, b=b[4], out=a1-4);
    And(a=a1-4, b=sel, out=o1-4);
    And(a=a[4], b=nb-4, out=a2-4);
    And(a=a2-4, b=ns, out=o2-4);
    And(a=a[4], b=b[4], out=a3-4);
    And(a=a3-4, b=ns, out=o3-4);
    And(a=a[4], b=b[4], out=a4-4);
    And(a=a4-4, b=sel, out=o4-4);
    Or(a=o1-4, b=o2-4, out=or1-4);
    Or(a=or1-4, b=o3-4, out=or2-4);
    Or(a=or2-4, b=o4-4, out=out[4]);

    Not(in=a[5], out=na-5);
    Not(in=b[5], out=nb-5);
    And(a=na-5, b=b[5], out=a1-5);
    And(a=a1-5, b=sel, out=o1-5);
    And(a=a[5], b=nb-5, out=a2-5);
    And(a=a2-5, b=ns, out=o2-5);
    And(a=a[5], b=b[5], out=a3-5);
    And(a=a3-5, b=ns, out=o3-5);
    And(a=a[5], b=b[5], out=a4-5);
    And(a=a4-5, b=sel, out=o4-5);
    Or(a=o1-5, b=o2-5, out=or1-5);
    Or(a=or1-5, b=o3-5, out=or2-5);
    Or(a=or2-5, b=o4-5, out=out[5]);

    Not(in=a[6], out=na-6);
    Not(in=b[6], out=nb-6);
    And(a=na-6, b=b[6], out=a1-6);
    And(a=a1-6, b=sel, out=o1-6);
    And(a=a[6], b=nb-6, out=a2-6);
    And(a=a2-6, b=ns, out=o2-6);
    And(a=a[6], b=b[6], out=a3-6);
    And(a=a3-6, b=ns, out=o3-6);
    And(a=a[6], b=b[6], out=a4-6);
    And(a=a4-6, b=sel, out=o4-6);
    Or(a=o1-6, b=o2-6, out=or1-6);
    Or(a=or1-6, b=o3-6, out=or2-6);
    Or(a=or2-6, b=o4-6, out=out[6]);

    Not(in=a[7], out=na-7);
    Not(in=b[7], out=nb-7);
    And(a=na-7, b=b[7], out=a1-7);
    And(a=a1-7, b=sel, out=o1-7);
    And(a=a[7], b=nb-7, out=a2-7);
    And(a=a2-7, b=ns, out=o2-7);
    And(a=a[7], b=b[7], out=a3-7);
    And(a=a3-7, b=ns, out=o3-7);
    And(a=a[7], b=b[7], out=a4-7);
    And(a=a4-7, b=sel, out=o4-7);
    Or(a=o1-7, b=o2-7, out=or1-7);
    Or(a=or1-7, b=o3-7, out=or2-7);
    Or(a=or2-7, b=o4-7, out=out[7]);

    Not(in=a[8], out=na-8);
    Not(in=b[8], out=nb-8);
    And(a=na-8, b=b[8], out=a1-8);
    And(a=a1-8, b=sel, out=o1-8);
    And(a=a[8], b=nb-8, out=a2-8);
    And(a=a2-8, b=ns, out=o2-8);
    And(a=a[8], b=b[8], out=a3-8);
    And(a=a3-8, b=ns, out=o3-8);
    And(a=a[8], b=b[8], out=a4-8);
    And(a=a4-8, b=sel, out=o4-8);
    Or(a=o1-8, b=o2-8, out=or1-8);
    Or(a=or1-8, b=o3-8, out=or2-8);
    Or(a=or2-8, b=o4-8, out=out[8]);

    Not(in=a[9], out=na-9);
    Not(in=b[9], out=nb-9);
    And(a=na-9, b=b[9], out=a1-9);
    And(a=a1-9, b=sel, out=o1-9);
    And(a=a[9], b=nb-9, out=a2-9);
    And(a=a2-9, b=ns, out=o2-9);
    And(a=a[9], b=b[9], out=a3-9);
    And(a=a3-9, b=ns, out=o3-9);
    And(a=a[9], b=b[9], out=a4-9);
    And(a=a4-9, b=sel, out=o4-9);
    Or(a=o1-9, b=o2-9, out=or1-9);
    Or(a=or1-9, b=o3-9, out=or2-9);
    Or(a=or2-9, b=o4-9, out=out[9]);

    Not(in=a[10], out=na-10);
    Not(in=b[10], out=nb-10);
    And(a=na-10, b=b[10], out=a1-10);
    And(a=a1-10, b=sel, out=o1-10);
    And(a=a[10], b=nb-10, out=a2-10);
    And(a=a2-10, b=ns, out=o2-10);
    And(a=a[10], b=b[10], out=a3-10);
    And(a=a3-10, b=ns, out=o3-10);
    And(a=a[10], b=b[10], out=a4-10);
    And(a=a4-10, b=sel, out=o4-10);
    Or(a=o1-10, b=o2-10, out=or1-10);
    Or(a=or1-10, b=o3-10, out=or2-10);
    Or(a=or2-10, b=o4-10, out=out[10]);

    Not(in=a[11], out=na-11);
    Not(in=b[11], out=nb-11);
    And(a=na-11, b=b[11], out=a1-11);
    And(a=a1-11, b=sel, out=o1-11);
    And(a=a[11], b=nb-11, out=a2-11);
    And(a=a2-11, b=ns, out=o2-11);
    And(a=a[11], b=b[11], out=a3-11);
    And(a=a3-11, b=ns, out=o3-11);
    And(a=a[11], b=b[11], out=a4-11);
    And(a=a4-11, b=sel, out=o4-11);
    Or(a=o1-11, b=o2-11, out=or1-11);
    Or(a=or1-11, b=o3-11, out=or2-11);
    Or(a=or2-11, b=o4-11, out=out[11]);

    Not(in=a[12], out=na-12);
    Not(in=b[12], out=nb-12);
    And(a=na-12, b=b[12], out=a1-12);
    And(a=a1-12, b=sel, out=o1-12);
    And(a=a[12], b=nb-12, out=a2-12);
    And(a=a2-12, b=ns, out=o2-12);
    And(a=a[12], b=b[12], out=a3-12);
    And(a=a3-12, b=ns, out=o3-12);
    And(a=a[12], b=b[12], out=a4-12);
    And(a=a4-12, b=sel, out=o4-12);
    Or(a=o1-12, b=o2-12, out=or1-12);
    Or(a=or1-12, b=o3-12, out=or2-12);
    Or(a=or2-12, b=o4-12, out=out[12]);

    Not(in=a[13], out=na-13);
    Not(in=b[13], out=nb-13);
    And(a=na-13, b=b[13], out=a1-13);
    And(a=a1-13, b=sel, out=o1-13);
    And(a=a[13], b=nb-13, out=a2-13);
    And(a=a2-13, b=ns, out=o2-13);
    And(a=a[13], b=b[13], out=a3-13);
    And(a=a3-13, b=ns, out=o3-13);
    And(a=a[13], b=b[13], out=a4-13);
    And(a=a4-13, b=sel, out=o4-13);
    Or(a=o1-13, b=o2-13, out=or1-13);
    Or(a=or1-13, b=o3-13, out=or2-13);
    Or(a=or2-13, b=o4-13, out=out[13]);

    Not(in=a[14], out=na-14);
    Not(in=b[14], out=nb-14);
    And(a=na-14, b=b[14], out=a1-14);
    And(a=a1-14, b=sel, out=o1-14);
    And(a=a[14], b=nb-14, out=a2-14);
    And(a=a2-14, b=ns, out=o2-14);
    And(a=a[14], b=b[14], out=a3-14);
    And(a=a3-14, b=ns, out=o3-14);
    And(a=a[14], b=b[14], out=a4-14);
    And(a=a4-14, b=sel, out=o4-14);
    Or(a=o1-14, b=o2-14, out=or1-14);
    Or(a=or1-14, b=o3-14, out=or2-14);
    Or(a=or2-14, b=o4-14, out=out[14]);

    Not(in=a[15], out=na-15);
    Not(in=b[15], out=nb-15);
    And(a=na-15, b=b[15], out=a1-15);
    And(a=a1-15, b=sel, out=o1-15);
    And(a=a[15], b=nb-15, out=a2-15);
    And(a=a2-15, b=ns, out=o2-15);
    And(a=a[15], b=b[15], out=a3-15);
    And(a=a3-15, b=ns, out=o3-15);
    And(a=a[15], b=b[15], out=a4-15);
    And(a=a4-15, b=sel, out=o4-15);
    Or(a=o1-15, b=o2-15, out=or1-15);
    Or(a=or1-15, b=o3-15, out=or2-15);
    Or(a=or2-15, b=o4-15, out=out[15]);
}
